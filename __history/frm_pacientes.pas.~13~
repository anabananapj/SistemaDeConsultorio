unit frm_pacientes;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.WinXPickers, Vcl.StdCtrls,
  Vcl.ExtCtrls, Data.DB, Vcl.Grids, Vcl.DBGrids, FireDAC.Stan.Intf,
  FireDAC.Stan.Option, FireDAC.Stan.Param, FireDAC.Stan.Error, FireDAC.DatS,
  FireDAC.Phys.Intf, FireDAC.DApt.Intf, FireDAC.Stan.Async, FireDAC.DApt,
  FireDAC.Comp.DataSet, FireDAC.Comp.Client, Datasnap.Provider;

type
  Tpacientes = class(TForm)
    pn_cad_pac: TPanel;
    pn_titulo: TPanel;
    grid_pacientes: TDBGrid;
    query_pacientes: TFDQuery;
    ds_pacientes: TDataSource;
    procedure grid_pacientesDblClick(Sender: TObject);


  private
    { Private declarations }

    FDataSource: TDataSource;

  public
    { Public declarations }
     constructor Create(AOwner: TComponent); override;
     destructor Destroy; override;

     function GetDataSource: TDataSource;
     procedure SetDataSource(ADataSource: TDataSource);

     property DataSource: TDataSource read GetDataSource write SetDataSource;

  end;


var
  pacientes: Tpacientes;

implementation

{$R *.dfm}

uses uDTModuleConnection, frm_editar;



{ Tpacientes }

constructor Tpacientes.Create(AOwner: TComponent);
begin
  inherited Create(AOwner);
  FDataSource := TDataSource.Create(Self);
  FDataSource.DataSet := query_pacientes;
  grid_pacientes.DataSource := FDataSource;
end;

destructor Tpacientes.Destroy;
begin
  FDataSource.Free;
  inherited Destroy;
end;

function Tpacientes.GetDataSource: TDataSource;
begin
  Result := FDataSource;
end;

procedure Tpacientes.SetDataSource(ADataSource: TDataSource);
begin
  FDataSource := ADataSource;
  grid_pacientes.DataSource := FDataSource;
end;


procedure Tpacientes.grid_pacientesDblClick(Sender: TObject);
var
  sql: string;
begin
  try
    sql := 'UPDATE pacientes SET ' +
           'nome_pac = :nome_pac, ' +
           'telefone_pac = :telefone_pac, ' +
           'cpf_pac = :cpf_pac, ' +
           'rg_pac = :rg_pac, ' +
           'email_pac = :email_pac, ' +
           'profissao = :profissao, ' +
           'cep = :cep, ' +
           'rua = :rua, ' +
           'bairro = :bairro, ' +
           'numero_casa = :numero_casa, ' +
           'estado = :estado, ' +
           'cidade = :cidade ' +
           'WHERE id_pac = :id_pac';

    query_pacientes.SQL.Text := sql;

    query_pacientes.Params.ParamByName('id_pac').AsInteger := pacientes.GetDataSource.DataSet.FieldByName('id_pac').AsInteger;
    query_pacientes.Params.ParamByName('nome_pac').AsString := edt_nome.Text;
    query_pacientes.Params.ParamByName('telefone_pac').AsString := edt_telefone.Text;
    query_pacientes.Params.ParamByName('cpf_pac').AsString := edt_cpf.Text;
    query_pacientes.Params.ParamByName('rg_pac').AsString := edt_rg.Text;
    query_pacientes.Params.ParamByName('email_pac').AsString := edt_email.Text;
    query_pacientes.Params.ParamByName('profissao').AsString := edt_profissao.Text;
    query_pacientes.Params.ParamByName('cep').AsString := edt_cep.Text;
    query_pacientes.Params.ParamByName('rua').AsString := edt_rua.Text;
    query_pacientes.Params.ParamByName('bairro').AsString := edt_bairro.Text;
    query_pacientes.Params.ParamByName('numero_casa').AsString := edt_numero.Text;
    query_pacientes.Params.ParamByName('estado').AsString := edt_estado.Text;
    query_pacientes.Params.ParamByName('cidade').AsString := edt_cidade.Text;

    query_pacientes.ExecSQL;

    pacientes.GetDataSource.DataSet.Refresh;
    ModalResult := mrOk;
    messagedlg('Sucesso!', mtConfirmation, [mbOK], 0);
  except
    on E: Exception do
    begin
      ShowMessage('Erro ao atualizar as informações do Paciente: ' + E.Message);
    end;
  end;
end;





end.
